/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val; head
 *     ListNode next; tail
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {

        ListNode first = null;
        ListNode second = head;

        while (second != null) {
        ListNode temp = second.next;
        second.next = first;
        first = second;
        second = temp;
    }

    return first;

        /*
            if(!this.head.next) {
                return this.head;
            }

        ListNode first = this.head;
        this.tail = this.head;
        let second = first.next;

        while(this.head.next) {
            const temp = second.next;
            second.next = first;
            first = second;
            second = temp;
        }

        this.head.next = null;
        this.head = first;

        return this;
        */
    }
}
